#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

int menu();
int** cria_matriz(int m,int n);
void leiaMatriz(int **matriz ,int m ,int n);
int SomaMatriz(int **matriz , int m ,int n);
int *ColunaMatriz (int **matriz,int m ,int n ,int coluna);
void imprimeVetor (int *ele_colunas ,int n);
void LiberaMatriz (int **matriz , int m);
void ImprimeMatriz (int **matriz, int m, int n);


int main(){

    int escolha=0,m,n,**matriz,soma,coluna,*ele_colunas;


    do{
       menu();
        scanf("%d",&escolha);

            if(escolha != 6){
            switch (escolha){
                case 1 :
                    printf("\nNumero de linha : ");
                        scanf("%d",&m);
                    printf("\nNumero de colunas : ");
                        scanf("%d",&n);
                            matriz = cria_matriz(m,n);
                    break;

                case 2 :
                      leiaMatriz(matriz ,m ,n);
                      break;

                case 3:
                    soma =  SomaMatriz(matriz , m ,n);
                    printf("A soma dos elementos da matriz eh : %d\n",soma);
                    printf("\n");
                    break;

                case 4:
                    printf("Digite a coluna que deseja imprimir:");
                        scanf("%d",&coluna);
                    ele_colunas = ColunaMatriz (matriz,m ,n ,coluna);
                    imprimeVetor(ele_colunas ,m);
                    break;

                case 5 :
                    ImprimeMatriz (matriz, m, n);


                default :
                    break;



                }
            }

    }while(escolha != 6);


    LiberaMatriz(matriz,m);

return 0;
}


int menu(){

    printf("1-Criar uma matriz\n");
    printf("2-Leitura da matriz\n");
    printf("3-Soma dos elementos da matriz\n");
    printf("4-Elementos de uma determinada coluna\n");
    printf("5-Imprime a matriz\n");
    printf("6-Sair do programa\n");

}


int **cria_matriz(int m,int n){
    int **matriz ;
        matriz = (int**)malloc(m*sizeof(int*));
            if(!matriz){
                printf("Memoria insuficiente");
            }
        for(int i=0;i<m;i++){
        matriz[i] = (int*) malloc (n*sizeof(int));
            if(!matriz){
                printf("Memoria insuficiente");
            }
        }
     return matriz;
}

void leiaMatriz(int **matriz ,int m ,int n){

    for(int i = 0 ;i<m ; i++){
        for(int j=0 ; j<n ;j++){
            printf("M[%d][%d]:",i,j);
                scanf("%d",&matriz[i][j]);

        }
    }
}

int SomaMatriz(int **matriz , int m ,int n){
 int aux =0 ;

 for(int i = 0 ;i<m ; i++){
        for(int j=0 ; j<n ;j++){
            aux = aux + matriz[i][j];

        }
    }
return aux;
}

int *ColunaMatriz (int **matriz,int m ,int n ,int coluna){
    int *vetor_col ;
        vetor_col = (int*) malloc (m *sizeof(int));

            for(int i=0 ;i<m;i++){
                vetor_col[i] =matriz[i][coluna];
            }

return vetor_col;
}

void imprimeVetor (int *ele_colunas ,int m){
        for(int i=0 ;i<m; i++){
                printf("Elemento %d da coluna eh : %d \n",i ,ele_colunas[i]);
        }
}

void LiberaMatriz(int **matriz , int m  ){

for (int i=0 ;i <m ;i++)
 {
    free(matriz[i]);
 }
 free(matriz);


}

void ImprimeMatriz (int **matriz, int m, int n){

 for (int i=0 ; i<m ;i++){
    for(int j=0 ; j<n ;j++){

        printf("Matriz[%d][%d]:%d\t",i,j,matriz[i][j]);
    }

    printf("\n");
 }


}


